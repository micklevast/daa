For sorting the 20 GB file with one string per line we can use the external merge sort algorithm that is used to sort the large data that does not fit the RAM. Her we break the large data into smaller chunks the
One example of external sorting is the external merge sort algorithm, which is a K-way merge algorithm. It sorts chunks that each fit in RAM, then merges the sorted chunks together
The algorithm first sorts M items at a time and puts the sorted lists back into external memory. It then recursively does a K-way merge on those sorted lists. To do this merge, B elements from each sorted list are loaded into internal memory, and the minimum is repeatedly outputted.
For example, for sorting 20GB of data using only 1 GB of RAM:

1.	Read 1 GB of the data in main memory and sort by some conventional method, like quicksort.

2.	Write the sorted data to disk. 

3.	Repeat steps 1 and 2 until all of the data is in sorted 1GB chunks (there are 20GB / 1GB = 20 chunks), which now need to be merged into 
one single output file.


4.	Read the first 50MB(= 100MB / (20 chunks + 1)) of each sorted chunk into input buffers in main memory and allocate the remaining 50 MB
 for an output buffer. (In practice, it might provide better performance to make the output buffer larger and the input buffers slightly smaller.)
 
5.	Perform a 20-way merge and store the result in the output buffer. Whenever the output buffer fills,
write it to the final sorted file and empty it. Whenever any of the 20 input buffers empties, fill it with the next 50 MB of its
 associated 1GB sorted chunk until no more data from the chunk is available. This is the key step that makes external merge sort work
  externallyâ€”because the merge algorithm only makes one pass sequentially through each of the chunks, each chunk does not have to be loaded 
  ; rather, sequential parts of the chunk can be loaded as needed.
